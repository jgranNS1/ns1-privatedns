# A basic deployment with only one replica of the services.
# Suitable for testing, but not for production.
# If running in a local environment like minikube, you may need
# to provision a persistent volume separately, e.g.

# kind: PersistentVolume
# apiVersion: v1
# metadata:
#   name: data-data-0
#   labels:
#     type: local
# spec:
#   capacity:
#     storage: 2Gi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: "/data-pv"
    

bootstrap: true

data:
  name: data
  replicas: 1
  image:
    name: nsone/standalone_data
    tag: 2.3.1
    pullPolicy: IfNotPresent
  livenessProbe:
    initialDelaySeconds: 120
    failureThreshold: 3
    periodSeconds: 15
  storage:
    className: ""
    size: 1Gi
  popID: default_pop
  enableOpsMetrics: false
  exposeOpsMetrics: false
  startupFlags: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

core:
  name: core
  replicas: 1
  image:
    name: nsone/standalone_core
    tag: 2.3.1
    pullPolicy: IfNotPresent
  livenessProbe:
    initialDelaySeconds: 30
    failureThreshold: 3
    periodSeconds: 15
  popID: default_pop
  apiHostname: localhost
  portalHostname: localhost
  nameServers: "example1.com,example2.com"
  hostMasterEmail: "example@email.com"
  enableOpsMetrics: false
  enableWebTLS: false
  startupFlags: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

dns:
  image:
    name: nsone/standalone_dns
    tag: 2.3.1
    pullPolicy: IfNotPresent
  pops:
  - name: dns
    replicas: 1
    livenessProbe:
      initialDelaySeconds: 30
      failureThreshold: 3
      periodSeconds: 15
    popID: default_pop
    coreService: core
    operationMode: authoritative
    enableOpsMetrics: false
    startupFlags: {}
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

dhcp:
  image:
    name: nsone/standalone_dhcp
    tag: 2.3.1
    pullPolicy: IfNotPresent
  pops:
  - name: dhcp
    replicas: 1
    livenessProbe:
      initialDelaySeconds: 30
      failureThreshold: 3
      periodSeconds: 15
    hostMode: false
    popID: default_pop
    coreService: core
    serviceDefID: 1
    enableOpsMetrics: false
    startupFlags: {}
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

xfr:
  name: xfr
  replicas: 1
  image:
    name: nsone/standalone_xfr
    tag: 2.3.1
    pullPolicy: IfNotPresent
  livenessProbe:
    initialDelaySeconds: 30
    failureThreshold: 3
    periodSeconds: 15
  popID: default_pop
  coreService: core
  enableOpsMetrics: false
  startupFlags: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
