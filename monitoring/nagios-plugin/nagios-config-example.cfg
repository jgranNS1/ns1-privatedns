# Example Nagios configuration
# Make sure to change all instances of host_name to your actual host name.  
# Be sure to also change address to match your host's IP address.

# Host details
define host{
	use		linux-server
	host_name	ddi
	alias		ddi
	address		172.21.3.11
	}

# Check DDI health using per-container supd API endpoints
define command{
	command_name	check_ddi
	command_line    /usr/local/bin/check_ddi.py $HOSTADDRESS$ $ARG1$
	}

define service{
	use				generic-service
	host_name			ddi
	service_description		data
	check_command			check_ddi!3305
	}

define service{
	use				generic-service
	host_name			ddi
	service_description		core
	check_command			check_ddi!3302
	}

define service{
	use				generic-service
	host_name			ddi
	service_description		dist
	check_command			check_ddi!3304
	}

define service{
	use				generic-service
	host_name			ddi
	service_description		dns
	check_command			check_ddi!3301
	}

define service{
	use				generic-service
	host_name			ddi
	service_description		dhcp
	check_command			check_ddi!3300
	}

define service{
	use				generic-service
	host_name			ddi
	service_description		xfr
	check_command			check_ddi!3303
	}

# Use standard Nagios plugins to perform synthetic DNS & DHCP tests
# Replace some_authoratative_zone.net with a zone that your DDI
# deployment is authoratative for.  Replace eth0 with your Nagios server's
# primary interface if it is different.

define command{
	command_name	check_dns
	command_line	/usr/local/nagios/libexec/check_dns -s $HOSTADDRESS$ -H $ARG1$
	}

define command{
	command_name	check_dhcp
	command_line	/usr/local/nagios/libexec/check_dhcp -u -s $HOSTADDRESS$ -i $ARG1$
	}

define service{
	use				generic-service
	host_name			ddi
	service_description		check_dns
	check_command			check_dns!some_authoratative_zone.net
	}

define service{
	use				generic-service
	host_name			ddi
	service_description		check_dhcp
	check_command			check_dhcp!eth0
	}

