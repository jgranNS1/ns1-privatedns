apiVersion: v1
kind: Service
metadata:
  name: data-headless
  labels:
    run: data
spec:
  clusterIP: None
  ports:
  - port: 5353
    targetPort: data
    protocol: TCP
    name: data
  - port: 3300
    targetPort: http-config
    protocol: TCP
    name: http-config
  - port: 9090
    targetPort: service
    protocol: TCP
    name: service
  - port: 8686
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app: data
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: data
  labels:
    app: data
spec:
  replicas: 3
  selector:
    matchLabels:
      app: data
  serviceName: "data-headless"
  template:
    metadata:
      labels:
        app: data
    spec:
      nodeSelector:
        location: main
      initContainers:
      - name: init-sysctl
        image: busybox
        command:
        - sysctl
        - -w
        - net.ipv6.conf.lo.disable_ipv6=0
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
      containers:
      - name: data
        image: nsone/standalone_data:5f4b88c4b
        imagePullPolicy: IfNotPresent
        env:
        - name: CLUSTER_SIZE
          value: "3"
        - name: CONTAINER_NAME
          value: "data"
        - name: CONFIG_PORT
          value: "3300"
        - name: DATA_PRIMARY
          value: "false"
        - name: DIST_PORT
          value: "25672"
        ports:
        - name: data
          containerPort: 5353
          protocol: TCP
        - name: http-config
          containerPort: 3300
          protocol: TCP
        - name: service
          containerPort: 9090
          protocol: TCP
        - name: metrics
          containerPort: 8686
          protocol: TCP
        command:
          - "/script/entry.sh"
        livenessProbe:
          exec:
            command:
            - supd
            - health
          initialDelaySeconds: 120
          failureThreshold: 5
          periodSeconds: 15
        volumeMounts:
        - mountPath: /ns1/data
          name: ns1-data
        - name: data-entrypoint
          mountPath: /script/entry.sh
          subPath: entry.sh
      volumes:
      - name: data-entrypoint
        configMap:
          name: data-entrypoint
          defaultMode: 0777
      imagePullSecrets:
      - name: docker-creds
  volumeClaimTemplates:
  - metadata:
      name: ns1-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "do-block-storage"
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: data-entrypoint
data:
  entry.sh: |
    #! /bin/sh
    ID=$(echo $HOSTNAME | awk -F '-' '{ print $2 }')
    DATA_PEERS=""

    i=0
    while [ $i -lt $CLUSTER_SIZE ]
    do
            if [ $i -eq $ID ]; then
                    i=$(($i + 1))
                    continue
            fi

            DATA_PEERS="$DATA_PEERS,data-$i.data-headless"

            i=$(($i + 1))
    done

    DATA_PEERS=$(echo $DATA_PEERS | sed 's/^,//g')
    CLUSTER_ID=$(( $ID + 1))

    /usr/local/bin/entrypoint \
            --pop_id=default_pop \
            --server_id=$HOSTNAME.data-headless \
            --data_peers=$DATA_PEERS \
            --cluster_id=$CLUSTER_ID \
            --cluster_size=$CLUSTER_SIZE
